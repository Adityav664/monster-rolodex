{"version":3,"sources":["components/card/card-list.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","console","log","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAGaA,EAAK,SAACC,GAAD,OACd,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAK,wBAAwBF,EAAMG,QAAQC,GAAG,yBAA0BC,IAAI,YACjF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHbC,EAAS,SAAAR,GAElB,OADAS,QAAQC,IAAIV,EAAMM,MACV,qBAAKL,UAAU,YAAf,SACJD,EAAMW,SAASC,KAAI,SAAAT,GAAO,OAAK,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQC,UCJ9CS,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,uBAAOd,UAAU,SAASe,KAAK,SAASF,YAAaA,EACrDG,SAAUF,MCgCCG,E,kDA/Bb,aAAc,IAAD,8BACX,gBAUFH,aAAa,SAAAI,GACX,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAVpC,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAY,IAEd,EAAKN,aAAa,EAAKA,aAAaU,KAAlB,gBANP,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,OAAOF,MAAK,SAAAG,GAAK,OAAE,EAAKV,SAAS,CAACT,SAASmB,Y,oBAKzH,WACE,MAA4BC,KAAKP,MAA3Bb,EAAN,EAAMA,SAASU,EAAf,EAAeA,YACTW,EAAgBrB,EAASsB,QAAO,SAAA9B,GAAO,OAAEA,EAAQG,KAAK4B,cAAcC,SAASd,EAAYa,kBAC/F,OACA,sBAAKjC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACGa,YAAY,iBACZC,aAAcgB,KAAKhB,eAEtB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAzBRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.19c7182c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card=(props)=>(\r\n    <div className='card-container'>\r\n        <img src={'https://robohash.org/'+props.monster.id+'?set=set2&size=180x180'} alt=\"monster\" />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport \"./card-list.style.css\"\r\nimport { Card } from \"../card/card-list.component\";\r\n\r\nexport const CardList=props=>{\r\n    console.log(props.name);\r\n    return (<div className=\"card-list\">{\r\n        props.monsters.map(monster => (<Card  key={monster.id} monster={monster}/>))\r\n    }\r\n    </div>);\r\n}","import React from 'react';\r\nimport './search-box.css';\r\n\r\nexport const Searchbox=({placeholder,handleChange})=>(\r\n    <input className='search' type=\"search\" placeholder={placeholder} \r\n    onChange={handleChange}/>\r\n)","import { Component } from \"react\";\nimport './App.css';\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport { Searchbox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchField:''\n    };\n    this.handleChange=this.handleChange.bind(this);\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response=>response.json().then(users=>this.setState({monsters:users})  ));\n  }\n  handleChange=e=>{\n    this.setState({searchField:e.target.value}); \n  }\n  render(){\n    const{monsters,searchField}=this.state;\n    const filteredMonster=monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return(\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <Searchbox \n         placeholder='search monster'\n         handleChange={this.handleChange}\n      />\n      <CardList monsters={filteredMonster}></CardList>\n      \n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}